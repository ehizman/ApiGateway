server.port=8020
spring.application.name=api-gw
eureka.client.service-url.defaultZone= http://localhost:8010/eureka

# ------------------------------------ AUTOMATIC ROUTE MAPPING --------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------
#this allows automatic route mapping. using the eureka server
#spring.cloud.gateway.discovery.locator.enabled=true

# this allows mapping of service_id as registered on Eureka server in lower case form
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# ---------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------

# -------------------------- MANUAL ROUTE MAPPING ------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------
# this is the id of a route, there can be so many routes, hence we refer to it as an array.
#spring.cloud.gateway.routes[0].id=users-status-check

# this is the service that the route is to be forwarded to.
# It uses the service name on the Eureka server to refer to the service

#spring.cloud.gateway.routes[0].uri=lb://users-ms


# predicates are what the API Gateway looks for in a route forwarding to to a service

# here the route must be `/users/status-check`
#spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status-check

# here the route must be called with the GET method
#spring.cloud.gateway.routes[0].predicates[1]=Method=GET

# RemoveRequestHeader is a built in filter. Here I am removing the cookie header for any request
#spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
# ---------------------------------------------------------------------------------------------------------------------

# --------------- LET's say I want to write a path on the front end to an internal Path --------------------------------
# this is the id of a route, there can be so many routes, hence we refer to it as an array.
spring.cloud.gateway.routes[0].id=users-status-check

# this is the service that the route is to be forwarded to.
# It uses the service name on the Eureka server to refer to the service

spring.cloud.gateway.routes[0].uri=lb://users-ms


# predicates are what the API Gateway looks for in a route forwarding to to a service

# here the route must be `/users/status-check`
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/status-check

# here the route must be called with the GET method
spring.cloud.gateway.routes[0].predicates[1]=Method=GET

# RemoveRequestHeader is a built in filter. Here I am removing the cookie header for any request
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie

#Rewrite Path filter is used to rewrite a path to an internal path
# It take two arguments:
#       an external path- in this case, our external path is: `/users-service/status/check` same as specified in the predicates
#       an internal path- in this case, the internal path is `/users/status-check`, the internal path must match a controller route
#spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-service/status/check, /users/status-check

# regex can also be used to match the internal and the external path
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/user-service/(?<segment>.*), /users/$\{segment}
# ---------------------------------------------------------------------------------------------------------------------